/**
 * Grid position fallback for IE 10 & 11
 * IE 10 & 11 use the old grid syntax which requires the position of each grid item to be specified.
 * Columns for gutters also need to be set as gap is not supported.
 *
 * Usage:
 * Pass in a map of the grid layout and, optionally, the selector to target for the grid elements (defaults to div).
 * For each grid item give `index: (row, column)`
 * Row and column positions of 1 aren't generated as these are the default.
 *
 * e.g. for a 3x3 grid with a 10px gutter:
 * -ms-grid-columns: 1fr 10px 1fr 10px 1fr;
 * $my-grid: (
 *  1: (1, 1),
 *  2: (1, 3),
 *  3: (2, 1)
 * );
 * @include grid-fallback($my-grid);
 *
 * Results in:
 * div:nth-child(2) {
 *   -ms-grid-column: 3;
 * }
 * div:nth-child(3) {
 *   -ms-grid-row: 2;
 *   -ms-grid-column: 1;
 * }
 */

@mixin grid-fallback($grid, $selector: div) {

  @each $i, $position in $grid {
    & > #{$selector}:nth-child(#{$i}) {

      @if nth($position, 1) != 1 {
        -ms-grid-row: nth($position, 1);
      }
      @if nth($position, 2) != 1 {
        -ms-grid-column: nth($position, 2);
      }
    }
  }

}
